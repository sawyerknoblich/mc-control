version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3
  aws-ecr: circleci/aws-ecr@9.1.0

jobs:
  build-application:
    docker:
      - image: 510648156659.dkr.ecr.us-east-1.amazonaws.com/node-with-rust-wasm:latest
        aws_auth:
          oidc_role_arn: arn:aws:iam::510648156659:role/circleci-oidc

    resource_class: "medium"

    steps:
      - checkout

      - run:
          name: Check Server Formatting
          working_directory: "server"
          command: "cargo fmt --check"

      - run:
          name: Run Clippy
          working_directory: "server"
          command: "cargo clippy"
      
      - run:
          name: NPM Install
          working_directory: "ui"
          command: "npm ci"

      - run:
          name: Check UI Formatting
          working_directory: "ui"
          command: "npm run format:check"

      - run:
          name: Build UI
          working_directory: "ui"
          command: "npm run build"
      
      - run:
          name: Extract Version
          command: |
            VERSION=$(cat server/Cargo.toml | grep -E '^version' | sed -nr 's/^version[[:space:]]*=[[:space:]]*"(.*)"/\1/p')
            echo "export MC_CONTROL_VERSION='${VERSION}'" >> $BASH_ENV
            
      - aws-ecr/build_and_push_image:
          account_id: "510648156659"
          auth:
            - aws-cli/setup:
                role_arn: arn:aws:iam::510648156659:role/circleci-oidc
          build_path: "."
          checkout: false
          create_repo: false
          path: "."
          platform: linux/amd64
          push_image: true
          region: us-east-1
          remote_docker_layer_caching: true
          repo: mc-control
          setup_remote_docker: true
          skip_when_tags_exist: false
          tag: latest,${MC_CONTROL_VERSION}

workflows:
  on_push:
    jobs:
      - build-application
  
  manual:
    when: { equal: [ api, << pipeline.trigger_source >> ] }
    jobs:
      - build-application
